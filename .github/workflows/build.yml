name: Build, Push to JFrog, and Xray Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual run from GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1 - Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2 - Set up Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3 - Compile the code
      - name: Compile
        run: mvn compile

      # Step 4 - Run tests
      - name: Run tests
        run: mvn test

      # Step 5 - Package application
      - name: Package JAR
        run: mvn clean package -DskipTests=true

      # Step 6 - Docker login to JFrog
      - name: Docker login to JFrog
        run: echo "${{ secrets.JFROG_PASSWORD }}" | docker login ${{ secrets.JFROG_REGISTRY }} -u "${{ secrets.JFROG_USERNAME }}" --password-stdin

      # Step 7 - Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.JFROG_REGISTRY }}/${{ secrets.JFROG_REPO }}/spring-petclinic:latest .

      # Step 8 - Push Docker image to JFrog
      - name: Push Docker image
        run: docker push ${{ secrets.JFROG_REGISTRY }}/${{ secrets.JFROG_REPO }}/spring-petclinic:latest

      # Step 9 - Install JFrog CLI
      - name: Install JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          sudo mv jfrog /usr/local/bin/jf
          jf --version

      # Step 10 - Configure JFrog CLI
      - name: Configure JFrog CLI
        run: |
          jf config add my-server \
            --url "https://${{ secrets.JFROG_REGISTRY }}" \
            --user "${{ secrets.JFROG_USERNAME }}" \
            --password "${{ secrets.JFROG_PASSWORD }}" \
            --interactive=false
          jf config use my-server

            
#      # Step 10.1 - Configure to install JFrog CLI
#      - name: Install JFrog CLI v2
#        run: |
#          curl -fL https://getcli.jfrog.io | sh
#          mv jfrog /usr/local/bin/jf

      # Step 11 - Xray scan the Docker image and export JSON.
      - name: Xray Scan Docker Image
        run: |
          mkdir -p reports
          jf docker scan "${{ env.DOCKER_IMAGE }}" --format=json > reports/xray-scan.json
      #   jf docker scan ${{ secrets.JFROG_REGISTRY }}/${{ secrets.JFROG_REPO }}/spring-petclinic:latest --format=json > reports/xray-scan.json

      # Step 12 - Commit scan report back to repo
      - name: Commit scan report
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add reports/xray-scan.json
          git commit -m "Add Xray scan report"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
